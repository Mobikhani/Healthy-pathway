name: Android APK Build

on:
  push:
    branches: [ main, master ]
    paths-ignore:
      - '**.md'
      - '**.txt'
      - '.github/workflows/android-build.yml'
  workflow_dispatch:

jobs:
  build-apk:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.32.5'
        channel: 'stable'
    
    - name: Install dependencies
      run: flutter pub get
    
    - name: Get version info
      id: version
      run: |
        echo "version=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT
        echo "commit=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
    
    - name: Build APK
      run: flutter build apk --release
    
    - name: Rename APK with version
      run: |
        cd build/app/outputs/flutter-apk
        mv app-release.apk "HealthyPathway-Android-${{ steps.version.outputs.version }}-${{ steps.version.outputs.commit }}.apk"
        ls -la *.apk
    
    - name: Check if APK exists
      run: |
        cd build/app/outputs/flutter-apk
        if [ -f "HealthyPathway-Android-${{ steps.version.outputs.version }}-${{ steps.version.outputs.commit }}.apk" ]; then
          echo "✅ APK file created successfully"
          ls -la *.apk
          echo "📱 APK size:"
          du -h "HealthyPathway-Android-${{ steps.version.outputs.version }}-${{ steps.version.outputs.commit }}.apk"
        else
          echo "❌ APK file not found"
          ls -la
          exit 1
        fi
    
    - name: Upload APK
      uses: actions/upload-artifact@v3
      with:
        name: "HealthyPathway-Android-${{ steps.version.outputs.version }}-${{ steps.version.outputs.commit }}"
        path: build/app/outputs/flutter-apk/HealthyPathway-Android-${{ steps.version.outputs.version }}-${{ steps.version.outputs.commit }}.apk
        retention-days: 7
    
    - name: Cleanup old artifacts
      uses: actions/github-script@v6
      with:
        script: |
          const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
            owner: context.repo.owner,
            repo: context.repo.repo,
            run_id: context.runId,
          });
          
          // Keep only the latest 1 APK artifact
          const apkArtifacts = artifacts.data.artifacts.filter(artifact => 
            artifact.name.startsWith('HealthyPathway-Android-')
          );
          
          if (apkArtifacts.length > 1) {
            const artifactsToDelete = apkArtifacts.slice(1);
            for (const artifact of artifactsToDelete) {
              await github.rest.actions.deleteArtifact({
                owner: context.repo.owner,
                repo: context.repo.repo,
                artifact_id: artifact.id,
              });
            }
          } 